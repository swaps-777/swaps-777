import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb

A = pd.read_csv("D:/Datasets/50_Startups.csv")
A.head()

RND	ADMIN	MKT	STATE	PROFIT
0	165349.20	136897.80	471784.10	New York	192261.83
1	162597.70	151377.59	443898.53	California	191792.06
2	153441.51	101145.55	407934.54	Florida	191050.39
3	144372.41	118671.85	383199.62	New York	182901.99
4	142107.34	91391.77	366168.42	Florida	166187.94

A.describe()

RND	ADMIN	MKT	PROFIT
count	50.000000	50.000000	50.000000	50.000000
mean	73721.615600	121344.639600	211025.097800	112012.639200
std	45902.256482	28017.802755	122290.310726	40306.180338
min	0.000000	51283.140000	0.000000	14681.400000
25%	39936.370000	103730.875000	129300.132500	90138.902500
50%	73051.080000	122699.795000	212716.240000	107978.190000
75%	101602.800000	144842.180000	299469.085000	139765.977500
max	165349.200000	182645.560000	471784.100000	192261.830000

A.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 50 entries, 0 to 49
Data columns (total 5 columns):
RND       50 non-null float64
ADMIN     50 non-null float64
MKT       50 non-null float64
STATE     50 non-null object
PROFIT    50 non-null float64
dtypes: float64(4), object(1)
memory usage: 2.0+ KB

A.corr()

RND	ADMIN	MKT	PROFIT
RND	1.000000	0.241955	0.724248	0.972900
ADMIN	0.241955	1.000000	-0.032154	0.200717
MKT	0.724248	-0.032154	1.000000	0.747766
PROFIT	0.972900	0.200717	0.747766	1.000000

A.columns
Index(['RND', 'ADMIN', 'MKT', 'STATE', 'PROFIT'], dtype='object')


plt.scatter(A.RND,A.PROFIT)
plt.xlabel("RND")
plt.ylabel("PROFIT")

sb.regplot(A.RND,A.PROFIT)

# Divide Data into Training and Testing Set
X = A[["MKT"]]
Y = A[["PROFIT"]]
from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest = train_test_split(X,Y,test_size=0.2)

# TRAINING THE MODEL
from sklearn.linear_model import LinearRegression
lm = LinearRegression()
model = lm.fit(xtrain,ytrain)


b0 = model.intercept_
b1 = model.coef_

# MAKE PREDICTIONS
pred = model.predict(xtest)

ytest['predicted_vals'] = pred

ytest

PROFIT	predicted_vals
24	108552.04	96694.399922
41	77798.83	102924.325836
29	101004.64	87977.152121
46	49490.75	137506.021249
0	192261.83	183044.331863
8	152211.77	141286.026888
37	89949.14	111412.742307
18	124266.90	136933.789105
20	118474.03	137910.126032
23	108733.99	139501.574253



from sklearn.metrics import mean_absolute_error
MAE = mean_absolute_error(ytest,pred)
print("Overall model error is %.2f"%MAE)

#Plot Regression

import matplotlib.pyplot as plt
plt.scatter(A.RND,A.PROFIT)
plt.xlabel("RND")
plt.ylabel("PROFIT")
plt.plot(xtrain,b0+b1*xtrain, c="red")

